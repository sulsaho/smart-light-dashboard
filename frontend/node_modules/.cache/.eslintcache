[{"/Users/main/Desktop/LightDashboard/frontend/src/index.js":"1","/Users/main/Desktop/LightDashboard/frontend/src/reportWebVitals.js":"2","/Users/main/Desktop/LightDashboard/frontend/src/App.js":"3"},{"size":500,"mtime":1635611435840,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1635611435840,"results":"6","hashOfConfig":"5"},{"size":5243,"mtime":1636655029479,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"18ypxz3",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/main/Desktop/LightDashboard/frontend/src/index.js",[],["16","17"],"/Users/main/Desktop/LightDashboard/frontend/src/reportWebVitals.js",[],"/Users/main/Desktop/LightDashboard/frontend/src/App.js",["18"],"//import logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Slider from '@material-ui/core/Slider';\nimport BrightnessLowIcon from '@mui/icons-material/BrightnessLow';\nimport BrightnessHighIcon from '@mui/icons-material/BrightnessHigh';\nimport axios from 'axios';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {Stack} from \"@mui/material\";\n\nfunction App() {\n\n  async function onButton() {\n    await axios.post('https://localhost:5001/api/LightState/light/turn-on');\n  }\n\n  async function offButton() {\n    await axios.post('https://localhost:5001/api/LightState/light/turn-off');\n  }\n\n  async function setWhiteColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/white');\n  }\n\n  async function setRedColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/red');\n  }\n\n  async function setOrangeColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/orange');\n  }\n\n  async function setYellowColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/yellow');\n  }\n\n  async function setCyanColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/cyan');\n  }\n\n  async function setGreenColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/green');\n  }\n\n  async function setBlueColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/blue');\n  }\n\n  async function setPurpleColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/purple');\n  }\n\n  async function setPinkColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/pink');\n  }\n\n  async function breatheEffect() {\n    await axios.post('https://localhost:5001/api/LightState/light/breathe');\n  }\n\n  async function getBrightnessValue(e, val) {\n    let uri = 'https://localhost:5001/api/LightState/light/brightness/' + val.toString();\n    await axios.post(uri);\n  }\n\n\n      return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <h2>Turn ON/OFF</h2>\n          <ButtonGroup\n            variant=\"outlined\">\n            <Button\n                size=\"large\"\n                color=\"primary\"\n                onClick={onButton}>\n              ON\n            </Button>\n            <Button\n                size=\"large\"\n                color=\"secondary\"\n                onClick={offButton}>\n              OFF\n            </Button>\n          </ButtonGroup>\n        </div>\n\n        <div>\n          <h2>Set Colors</h2>\n          <ButtonGroup\n            variant='outlined'>\n            <Button\n                size=\"large\"\n                style={{color : '#FFFFFF'}}\n                onClick={setWhiteColor}>\n              White\n            </Button>\n            <Button\n                size=\"large\"\n                style={{color : '#FF0000'}}\n                onClick={setRedColor}>\n              Red\n            </Button>\n            <Button\n                size=\"large\"\n                style={{color : '#FFA500'}}\n                onClick={setOrangeColor}>\n              Orange\n            </Button>\n            <Button\n                size=\"large\"\n                style={{color : '#FFFF00'}}\n                onClick={setYellowColor}>\n              Yellow\n            </Button>\n            <Button\n                size=\"large\"\n                style={{color : '#00FFFF'}}\n                onClick={setCyanColor}>\n              Cyan\n            </Button>\n            <Button\n                size=\"large\"\n                style={{color : '#008000'}}\n                onClick={setGreenColor}>\n              Green\n            </Button>\n            <Button\n                size=\"large\"\n                style={{color : '#0000FF'}}\n                onClick={setBlueColor}>\n              Blue\n            </Button>\n            <Button\n                size=\"large\"\n                style={{color : '#800080'}}\n                onClick={setPurpleColor}>\n              Purple\n            </Button>\n            <Button\n                size=\"large\"\n                style={{color : '#FF00FF'}}\n                onClick={setPinkColor}>\n              Pink\n            </Button>\n          </ButtonGroup>\n        </div>\n\n        <h2>Pulse Effect</h2>\n        <div>\n          <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={breatheEffect}>\n            Pulse Light\n          </Button>\n        </div>\n\n        <h2>Set Brightness</h2>\n\n        <div style={{width: 300}}>\n          <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\n            <BrightnessLowIcon />\n            <Slider\n              color=\"primary\"\n              defaultValue={50}\n              step={10}\n              marks\n              valueLabelDisplay={\"auto\"}\n              onChange={getBrightnessValue}>\n            </Slider>\n            <BrightnessHighIcon />\n          </Stack>\n        </div>\n\n        {/*<Checkbox/> */}\n\n          {/* Not needed */}\n        {/*<img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":9,"column":8,"nodeType":"25","messageId":"26","endLine":9,"endColumn":16},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]