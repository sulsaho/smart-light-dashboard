{"ast":null,"code":"var _jsxFileName = \"/Users/main/Desktop/LightDashboard/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Slider from '@material-ui/core/Slider';\nimport BrightnessLowIcon from '@mui/icons-material/BrightnessLow';\nimport BrightnessHighIcon from '@mui/icons-material/BrightnessHigh';\nimport axios from 'axios';\nimport { Stack } from \"@mui/material\";\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport NightsStayIcon from '@mui/icons-material/NightsStay';\nimport MaterialUISwitch from './MUISwitch';\nimport { InputAdornment, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isSrssEnabled, setIsSrssEnabled] = useState(false);\n  React.useEffect(() => {\n    const handleLoad = async event => {\n      let result = await axios.post('https://localhost:5001/api/LightState/light/fetch-srss-feature/');\n      let enabled = JSON.stringify(result.data) !== '{}' ? result.data.srss_feature.enabled : false;\n      setIsSrssEnabled(enabled);\n      setSrssComponents(enabled, result.data);\n    };\n\n    window.addEventListener('load', handleLoad);\n    return () => {\n      window.removeEventListener('load', handleLoad);\n    };\n  }, []);\n\n  async function onButton() {\n    await axios.post('https://localhost:5001/api/LightState/light/turn-on');\n  }\n\n  async function offButton() {\n    await axios.post('https://localhost:5001/api/LightState/light/turn-off');\n  }\n\n  async function setWhiteColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/white');\n  }\n\n  async function setRedColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/red');\n  }\n\n  async function setOrangeColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/orange');\n  }\n\n  async function setYellowColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/yellow');\n  }\n\n  async function setCyanColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/cyan');\n  }\n\n  async function setGreenColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/green');\n  }\n\n  async function setBlueColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/blue');\n  }\n\n  async function setPurpleColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/purple');\n  }\n\n  async function setPinkColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/pink');\n  }\n\n  async function breatheEffect() {\n    await axios.post('https://localhost:5001/api/LightState/light/breathe');\n  }\n\n  async function getBrightnessValue(e, val) {\n    let uri = 'https://localhost:5001/api/LightState/light/brightness/' + val.toString();\n    await axios.post(uri);\n  }\n\n  async function setUpSunriseSunsetFeature(e, val) {\n    setIsSrssEnabled(val);\n    let result = await axios.post('https://localhost:5001/api/LightState/light/enable-srss-feature/' + val);\n    setSrssComponents(val, result.data);\n  }\n\n  function setSrssComponents(toFill, data) {\n    let sunriseElement = document.getElementById(\"sunrise\");\n    let sunsetElement = document.getElementById(\"sunset\");\n\n    if (toFill) {\n      sunriseElement.value = data.srss_feature.sunrise;\n      sunsetElement.value = data.srss_feature.sunset;\n    } else {\n      sunriseElement.value = '';\n      sunsetElement.value = '';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            direction: \"column\",\n            sx: {\n              mb: 1\n            },\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Turn ON/OFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"large\",\n                color: \"primary\",\n                onClick: onButton,\n                children: \"ON\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"large\",\n                color: \"secondary\",\n                onClick: offButton,\n                children: \"OFF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Set Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              style: {\n                color: '#FFFFFF'\n              },\n              onClick: setWhiteColor,\n              children: \"White\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              style: {\n                color: '#FF0000'\n              },\n              onClick: setRedColor,\n              children: \"Red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              style: {\n                color: '#FFA500'\n              },\n              onClick: setOrangeColor,\n              children: \"Orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              style: {\n                color: '#FFFF00'\n              },\n              onClick: setYellowColor,\n              children: \"Yellow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              style: {\n                color: '#00FFFF'\n              },\n              onClick: setCyanColor,\n              children: \"Cyan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              style: {\n                color: '#008000'\n              },\n              onClick: setGreenColor,\n              children: \"Green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              style: {\n                color: '#0000FF'\n              },\n              onClick: setBlueColor,\n              children: \"Blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              style: {\n                color: '#800080'\n              },\n              onClick: setPurpleColor,\n              children: \"Purple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              style: {\n                color: '#FF00FF'\n              },\n              onClick: setPinkColor,\n              children: \"Pink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Breathe Effect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            color: \"primary\",\n            onClick: breatheEffect,\n            children: \"Breathe Light Effect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Set Brightness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 300\n          },\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            direction: \"row\",\n            sx: {\n              mb: 1\n            },\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(BrightnessLowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              color: \"primary\",\n              defaultValue: 50,\n              step: 10,\n              marks: true,\n              valueLabelDisplay: \"auto\",\n              onChange: getBrightnessValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BrightnessHighIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Toggle Sunrise and Sunset Feature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 200\n        },\n        children: /*#__PURE__*/_jsxDEV(MaterialUISwitch, {\n          checked: isSrssEnabled,\n          onChange: setUpSunriseSunsetFeature,\n          id: \"srss\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 460,\n          margin: \"1% 0 10% 5%\",\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"sunrise\",\n          label: \"Sunrise\",\n          variant: \"filled\",\n          focused: true,\n          InputProps: {\n            readOnly: true,\n            style: {\n              color: 'white'\n            },\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 23\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"sunset\",\n          label: \"Sunset\",\n          variant: \"filled\",\n          focused: true,\n          InputProps: {\n            readOnly: true,\n            style: {\n              color: 'brown'\n            },\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(NightsStayIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 23\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"4Zn29saf9j/eqct61RqIFIZbAyQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/main/Desktop/LightDashboard/frontend/src/App.js"],"names":["Button","ButtonGroup","Slider","BrightnessLowIcon","BrightnessHighIcon","axios","Stack","LightModeIcon","NightsStayIcon","MaterialUISwitch","InputAdornment","TextField","React","useState","App","isSrssEnabled","setIsSrssEnabled","useEffect","handleLoad","event","result","post","enabled","JSON","stringify","data","srss_feature","setSrssComponents","window","addEventListener","removeEventListener","onButton","offButton","setWhiteColor","setRedColor","setOrangeColor","setYellowColor","setCyanColor","setGreenColor","setBlueColor","setPurpleColor","setPinkColor","breatheEffect","getBrightnessValue","e","val","uri","toString","setUpSunriseSunsetFeature","toFill","sunriseElement","document","getElementById","sunsetElement","value","sunrise","sunset","mb","color","width","margin","display","justifyContent","readOnly","style","startAdornment"],"mappings":"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","sourcesContent":["import './App.css';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Slider from '@material-ui/core/Slider';\nimport BrightnessLowIcon from '@mui/icons-material/BrightnessLow';\nimport BrightnessHighIcon from '@mui/icons-material/BrightnessHigh';\nimport axios from 'axios';\nimport {Stack} from \"@mui/material\";\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport NightsStayIcon from '@mui/icons-material/NightsStay';\nimport MaterialUISwitch from './MUISwitch'\nimport {InputAdornment, TextField} from \"@material-ui/core\";\nimport React, { useState} from \"react\";\n\nfunction App() {\n  const [isSrssEnabled, setIsSrssEnabled]= useState(false);\n\n  React.useEffect(() => {\n    const handleLoad = async (event) => {\n      let result = await axios.post('https://localhost:5001/api/LightState/light/fetch-srss-feature/');\n      let enabled = JSON.stringify(result.data) !== '{}' ? result.data.srss_feature.enabled : false;\n\n      setIsSrssEnabled( enabled );\n      setSrssComponents(enabled, result.data);\n    };\n\n    window.addEventListener('load', handleLoad);\n\n    return () => {\n      window.removeEventListener('load', handleLoad);\n    };\n  }, []);\n\n  async function onButton() {\n    await axios.post('https://localhost:5001/api/LightState/light/turn-on');\n  }\n\n  async function offButton() {\n    await axios.post('https://localhost:5001/api/LightState/light/turn-off');\n  }\n\n  async function setWhiteColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/white');\n  }\n\n  async function setRedColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/red');\n  }\n\n  async function setOrangeColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/orange');\n  }\n\n  async function setYellowColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/yellow');\n  }\n\n  async function setCyanColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/cyan');\n  }\n\n  async function setGreenColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/green');\n  }\n\n  async function setBlueColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/blue');\n  }\n\n  async function setPurpleColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/purple');\n  }\n\n  async function setPinkColor() {\n    await axios.post('https://localhost:5001/api/LightState/light/color/pink');\n  }\n\n  async function breatheEffect() {\n    await axios.post('https://localhost:5001/api/LightState/light/breathe');\n  }\n\n  async function getBrightnessValue(e, val) {\n    let uri = 'https://localhost:5001/api/LightState/light/brightness/' + val.toString();\n    await axios.post(uri);\n  }\n\n  async function setUpSunriseSunsetFeature(e, val) {\n    setIsSrssEnabled( val );\n    let result = await axios.post('https://localhost:5001/api/LightState/light/enable-srss-feature/' + val);\n    setSrssComponents(val, result.data);\n  }\n\n  function setSrssComponents(toFill, data) {\n    let sunriseElement = document.getElementById(\"sunrise\");\n    let sunsetElement = document.getElementById(\"sunset\");\n    if (toFill) {\n      sunriseElement.value = data.srss_feature.sunrise;\n      sunsetElement.value = data.srss_feature.sunset;\n    }\n    else {\n      sunriseElement.value = '';\n      sunsetElement.value = '';\n    }\n  }\n\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Controls</h1>\n          <div className=\"Controls\">\n\n            <div>\n              <Stack spacing={2} direction=\"column\" sx={{ mb: 1 }} alignItems=\"center\">\n                <h2>Turn ON/OFF</h2>\n                <ButtonGroup\n                    variant=\"outlined\">\n                  <Button\n                      size=\"large\"\n                      color=\"primary\"\n                      onClick={onButton}>\n                    ON\n                  </Button>\n                  <Button\n                      size=\"large\"\n                      color=\"secondary\"\n                      onClick={offButton}>\n                    OFF\n                  </Button>\n                </ButtonGroup>\n              </Stack>\n            </div>\n\n\n            <div>\n              <h2>Set Colors</h2>\n              <ButtonGroup\n                  variant='outlined'>\n                <Button\n                    size=\"large\"\n                    style={{color : '#FFFFFF'}}\n                    onClick={setWhiteColor}>\n                  White\n                </Button>\n                <Button\n                    size=\"large\"\n                    style={{color : '#FF0000'}}\n                    onClick={setRedColor}>\n                  Red\n                </Button>\n                <Button\n                    size=\"large\"\n                    style={{color : '#FFA500'}}\n                    onClick={setOrangeColor}>\n                  Orange\n                </Button>\n                <Button\n                    size=\"large\"\n                    style={{color : '#FFFF00'}}\n                    onClick={setYellowColor}>\n                  Yellow\n                </Button>\n                <Button\n                    size=\"large\"\n                    style={{color : '#00FFFF'}}\n                    onClick={setCyanColor}>\n                  Cyan\n                </Button>\n                <Button\n                    size=\"large\"\n                    style={{color : '#008000'}}\n                    onClick={setGreenColor}>\n                  Green\n                </Button>\n                <Button\n                    size=\"large\"\n                    style={{color : '#0000FF'}}\n                    onClick={setBlueColor}>\n                  Blue\n                </Button>\n                <Button\n                    size=\"large\"\n                    style={{color : '#800080'}}\n                    onClick={setPurpleColor}>\n                  Purple\n                </Button>\n                <Button\n                    size=\"large\"\n                    style={{color : '#FF00FF'}}\n                    onClick={setPinkColor}>\n                  Pink\n                </Button>\n              </ButtonGroup>\n            </div>\n\n            <h2>Breathe Effect</h2>\n            <div>\n              <Button\n                  variant=\"contained\"\n                  size=\"large\"\n                  color=\"primary\"\n                  onClick={breatheEffect}>\n                Breathe Light Effect\n              </Button>\n            </div>\n\n            <h2>Set Brightness</h2>\n            <div style={{width: 300}}>\n              <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\n                <BrightnessLowIcon />\n                <Slider\n                    color=\"primary\"\n                    defaultValue={50}\n                    step={10}\n                    marks\n                    valueLabelDisplay={\"auto\"}\n                    onChange={getBrightnessValue}>\n                </Slider>\n                <BrightnessHighIcon />\n              </Stack>\n            </div>\n          </div>\n\n          <h3>Toggle Sunrise and Sunset Feature</h3>\n          <div style={{width: 200}}>\n            <MaterialUISwitch\n                checked={isSrssEnabled}\n                onChange={setUpSunriseSunsetFeature}\n                id=\"srss\"\n                color=\"secondary\"/>\n          </div>\n\n          <div style={{width: 460, margin: \"1% 0 10% 5%\", display: \"flex\", justifyContent: \"space-around\"}}>\n            <TextField\n                id=\"sunrise\"\n                label=\"Sunrise\"\n                variant=\"filled\"\n                focused\n                InputProps={{\n                  readOnly: true,\n                  style: {\n                    color: 'white'\n                  },\n                  startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LightModeIcon />\n                      </InputAdornment>\n                  ),\n                }}\n            />\n\n            <TextField\n                id=\"sunset\"\n                label=\"Sunset\"\n                variant=\"filled\"\n                focused\n                InputProps={{\n                  readOnly: true,\n                  style: {\n                    color: 'brown'\n                  },\n                  startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <NightsStayIcon />\n                      </InputAdornment>\n                  ),\n                }}\n            />\n          </div>\n\n\n          {/*<Checkbox/> */}\n\n          {/* Not needed */}\n          {/*<img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        </header>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}